name: Docker Image CI

on:
  # curl -H "Accept: application/vnd.github+json" -H "Authorization: token <TOKEN>" --request POST --data '{"event_type": "deploy-website"}' https://api.github.com/repos/diegovalle/hoydecrimen.clean/dispatches
  repository_dispatch:
    types: deploy-website
  push:
    branches:
      - master

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Clean Data for HoyoDeCrimen
      env:
        DOCKER_USERNAME: ${{  secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{  secrets.DOCKER_PASSWORD }}
      run: |
        docker login -u="$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
        docker pull diegovalle/docker-rstanarm:latest
        docker run --entrypoint /bin/sh -e CI="true" -v "$GITHUB_WORKSPACE":/hoyodecrimen diegovalle/docker-rstanarm -c "cd /hoyodecrimen  && Rscript run-all.R"
    - name: Collect artifacts if analysis failed
      env:
        ACCOUNT_ID: ${{  secrets.ACCOUNT_ID }}
        APPLICATION_KEY: ${{  secrets.APPLICATION_KEY }}
        BUCKET_ID: ${{  secrets.BUCKET_ID }}
      if: failure()
      run: |
        cd "$GITHUB_WORKSPACE" && zip hoyodecrimen-clean.zip clean-data/*.RData graphs/* && "$GITHUB_WORKSPACE"/upload_to_b2.sh hoyodecrimen-clean.zip
    - name: upload charts, json and RData files
      env:
        ACCOUNT_ID: ${{  secrets.ACCOUNT_ID }}
        APPLICATION_KEY: ${{  secrets.APPLICATION_KEY }}
        BUCKET_ID: ${{  secrets.BUCKET_ID }}
      run: |
        cd "$GITHUB_WORKSPACE" && zip hoyodecrimen-clean.zip clean-data/*.RData graphs/* clean-data/json/* && "$GITHUB_WORKSPACE"/upload_to_b2.sh hoyodecrimen-clean.zip
    - name: upload csv files to b2
      env:
        ACCOUNT_ID: ${{  secrets.ACCOUNT_ID_HOYODECRIMEN }}
        APPLICATION_KEY: ${{  secrets.APPLICATION_KEY_HOYODECRIMEN }}
        BUCKET_ID: ${{  secrets.BUCKET_ID_HOYODECRIMEN }}
      run: |
        echo "Uploading to B2"
        zip -j crime-lat-long-pgj.csv.zip "$GITHUB_WORKSPACE"/clean-data/crime-lat-long-pgj.csv && "$GITHUB_WORKSPACE"/upload_to_b2.sh crime-lat-long-pgj.csv.zip
        zip -j cuadrantes-pgj.csv.zip "$GITHUB_WORKSPACE"/clean-data/cuadrantes-pgj.csv && "$GITHUB_WORKSPACE"/upload_to_b2.sh cuadrantes-pgj.csv.zip
        zip -j pgj.csv.zip "$GITHUB_WORKSPACE"/clean-data/pgj.csv && "$GITHUB_WORKSPACE"/upload_to_b2.sh pgj.csv.zip
    - name: Invalidate stale cache
      env:
        CACHE_INVALIDATE_HEADER: ${{ secrets.CACHE_INVALIDATE_HEADER }}
      run: |
        curl --retry 10 -o /dev/null https://data.diegovalle.net/hoyodecrimen/crime-lat-long-pgj.csv.zip -H "$CACHE_INVALIDATE_HEADER:true"
        curl --retry 10 -o /dev/null https://data.diegovalle.net/hoyodecrimen/cuadrantes-pgj.csv.zip -H "$CACHE_INVALIDATE_HEADER:true"
        curl --retry 10 -o /dev/null https://data.diegovalle.net/hoyodecrimen/pgj.csv.zip -H "$CACHE_INVALIDATE_HEADER:true"
    - name: Update database
      env:
        CACHE_SECRET: ${{ secrets.CACHE_SECRET }}
        SQLALCHEMY_DATABASE_URI: ${{ secrets.SQLALCHEMY_DATABASE_URI }}
      run: |
        sudo apt-get install -y spiped
        ls -la /dev/shm
        "$GITHUB_WORKSPACE"/update/update.sh "$SQLALCHEMY_DATABASE_URI" "$CACHE_SECRET"
    - nama: Convert geojson to pmtiles
      run: |
        git clone https://github.com/mapbox/tippecanoe.git
        cd tippecanoe
        make -j
        sudo make install 
        curl -L https://github.com/protomaps/go-pmtiles/releases/download/v1.19.1/go-pmtiles_1.19.1_Linux_x86_64.tar.gz | sudo tar xvf -C /bin
        tippecanoe --force -r1 -Z12 -z12 -o "$GITHUB_WORKSPACE"clean-data/json/homicides.mbtiles -l crime-lat-long-pgj -n "crime-lat-long-pgj" "$GITHUB_WORKSPACE"/clean-data/json/homicides.geojson
        pmtiles convert "$GITHUB_WORKSPACE"/clean-data/json/homicides.mbtiles "$GITHUB_WORKSPACE"/clean-data/json/homicides.pmtiles
